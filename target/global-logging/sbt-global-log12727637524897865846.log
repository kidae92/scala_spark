[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Oracle Corporation Java 11.0.12)
[warn] sbt version mismatch, using: 1.5.8, in build.properties: "1.3.13", use 'reboot' to use the new value.
[debug] Load.defaultLoad until apply took 383.9986ms
[debug]           Load.loadUnit: plugins took 203.1782ms
[debug]           Load.loadUnit: defsScala took 0.6623ms
[debug] [Loading] Scanning directory C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.0825 ms
[debug]               Load.resolveProject(sparkscalacourse-build) took 145.7235ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkscalacourse-build, base: C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse\project, plugins: List(<none>))) took 222.916ms
[debug] [Loading] Done in C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse\project, returning: (sparkscalacourse-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 262.9195ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.5565ms
[debug]         Load.loadUnit(file:/C:/Users/홍기대/Desktop/SparkScalaCourse%20(1)/SparkScalaCourse/project/, ...) took 479.7951ms
[debug]       Load.apply: load took 855.3566ms
[debug]       Load.apply: resolveProjects took 78.2324ms
[debug]       Load.apply: finalTransforms took 461.0733ms
[debug]       Load.apply: config.delegates took 52.9576ms
[debug]       Load.apply: Def.make(settings)... took 1260.8318ms
[debug]       Load.apply: structureIndex took 881.4846ms
[debug]       Load.apply: mkStreams took 25.6927ms
[info] loading project definition from C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8913.1887ms
[debug]     Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory C:\Users\홍기대\Desktop\SparkScalaCourse (1)\SparkScalaCourse
[debug]       Load.loadUnit: mkEval took 10.1515ms
